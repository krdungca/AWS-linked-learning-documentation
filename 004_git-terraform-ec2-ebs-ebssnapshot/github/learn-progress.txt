ASDFSADFASFNEWTESTDIFF

1.  git init -> turn it into a version controlled folder
2. .git folder -> contains files for git to work
3. .gitignore-> file that contains which files to ignore and not commit/push to github

Learning Remote-repo to github account
1. Link local folder to repo by:
$git remote add origin https://link/link.git

2. Verify by:
$ git remove -v, results must be:
$ git remote -v
origin	https://github.com/krdungca/AWS-linked-learning-documentation.git (fetch)
origin	https://github.com/krdungca/AWS-linked-learning-documentation.git (push)

3. Stage by:
$ git add . (or select any folder to stage)

4. Check stage by:
$ git status: example result:
$ git status
On branch main
Your branch is up to date with 'origin/main'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
	new file:   learn-progress.txt

5. If ready to commit:
$git commit -m "Message"

6. Push to origin by: 
$ git push -u origin main

Note: 
legacy git may refer to local main branch to 'master', change it to main by:
$git branch -m master main



[E]
Store github creds (less secure) by:
$ git config -global credential.helper store

Store github creds (a bit more secure) by cache for a limited-time:
$ git config --global credential.helper cache

default time=15minutes
change it to custom time by:
$ git config --global credential.helper 'cache --timeout=3600'
#3600 here is in seconds

[F]
See Differences Between File Versions
1. See UNCOMMITTED changes by:
$git diff

2. See COMMITTED changes by:
$git diff --cached

[g]
Blame -> used to view which user edited a specific file:
$ git blame filename.txt

